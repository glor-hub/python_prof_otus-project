version: '3'
services:
  pg:
    image: postgres:15.0
    hostname: pg
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
#    networks:
#      - main
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data/

  rabbitmq:
    image: rabbitmq
    command: rabbitmq-server
    container_name: rabbitmq
    hostname: rabbitmq
#    environment:
#          - RABBITMQ_DEFAULT_USER=guest
#          - RABBITMQ_DEFAULT_PASS=guest
#      networks:
#      - main
    ports:
      - "5672:5672"
    volumes:
      - ./vksearch:/app
    restart: always

  web:
    build: ./vksearch
#      context: .
#      dockerfile: ./Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
#    networks:
#      - main
    ports:
      - "0.0.0.0:8000:8000"
    env_file:
      - ./.env
    expose:
      - "8000"
    volumes:
      - ./vksearch:/app/
    depends_on:
      - pg
      - rabbitmq
#      - celery

  celery:
    build: ./vksearch
#      context: .
#      dockerfile: ./Dockerfile
    command: celery -A vksearch worker -c 2 --loglevel=info
#    command: celery -A vksearch.vksearch worker --loglevel=INFO --without-gossip --without-mingle
#    command: celery -A vksearch.vksearch worker   -l info
#    working_dir: /vksearch/vksearch
    #    command: celery worker --app=celery_app --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./vksearch:/app/
    env_file:
      - ./.env
#    environment:
#      - CELERY_BROKER='amqp://user:**@rabbit1:5672'
#      - CELERY_BACKEND='amqp://user:**@rabbit1:5672'
#    networks:
#      - main
    depends_on:
      - web
      - rabbitmq
#      - db
#    restart: always

  dashboard:
    build: ./vksearch
    command:  flower -A vksearch --port=5555 --broker=amqp://guest:guest@rabbitmq:5672/
    ports:
      - "5555:5555"
    env_file:
      - ./.env
    depends_on:
      - web
      - rabbitmq
      - celery
#networks:
#  main:

volumes:
  pg-data:


